{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","assets/images/website_logo.png","componenets/Navbar.js","assets/images/avalanche.png","componenets/Footer.js","componenets/FAQ.js","assets/images/cerceve1.png","assets/images/nftGif.gif","assets/images/sample_im1.png","assets/images/sample_im2.png","assets/images/sample_im3.png","assets/images/sample_im4.png","componenets/WeGiveBack.js","componenets/Artist.js","componenets/ownedNFTS.js","assets/images/yildiz_gif4.gif","assets/images/paw.png","assets/images/texture.png","assets/images/strings.PNG","assets/images/mintplus.png","assets/images/Yumurta.png","assets/images/mintminus.png","componenets/Roadmap.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","tokensOfUser","error","reward","dataReducer","console","log","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","walletOfOwner","getReflectionBalances","from","connectFailed","connect","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","enable","request","method","accounts","SmartContractObj","SmartContract","abi","on","updateAccount","location","reload","Navbar","useSelector","useState","button","setButton","useDispatch","toast","useToast","showButton","innerWidth","useEffect","description","status","duration","isClosable","addEventListener","w","h","spacing","pr","bg","marginX","href","src","Logo","ml","align","fontSize","fontWeight","px","py","borderRadius","_hover","as","FaTwitter","color","FaTelegramPlane","FaDiscord","boxShadow","onClick","e","preventDefault","leftIcon","MdAccountBalanceWallet","Footer","pl","p","FAQ","WeGiveBack","pt","pb","alignItems","marginLeft","bgImage","cerceve1","backgroundSize","backgroundPosition","backgroundRepeat","mx","paddingLeft","paddingRight","sampleim2","Artist","sampleim3","OwnedNFTS","viewNFTs","NFTS","setNFTS","LoadingNFTS","setLoadingNFTS","i","nft","tokenURI","then","uri","fetch","replace","response","json","metaData","prevState","id","length","sort","b","catch","err","fetchMetatDataForNFTS","bgGradient","style","textAlign","columns","spacingX","spacingY","map","index","alt","image","boxSize","objectFit","pos","attributes","trait_type","value","Roadmap","sampleim1","App","feedback","setFeedback","setClaimingNft","amount","setAmount","mintingOpen","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","triedConnect","getAnalytics","textureimg","minH","theme","stringsimg","mt","nftGif","overflow","Number","mintminus","position","mintplus","pawimage","_amount","mint","send","to","utils","toWei","toString","once","receipt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","resetCSS","document","getElementById"],"mappings":"2yx8BAAMA,EAAe,CACnBC,SAAS,EACTC,QAAS,KACTC,cAAe,KACfC,KAAM,KACNC,SAAU,IAkCGC,EA/BW,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFT,GADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,2BACFM,GADL,IAEEN,SAAS,EACTC,QAASM,EAAOE,QAAQR,QACxBC,cAAeK,EAAOE,QAAQP,cAC9BC,KAAMI,EAAOE,QAAQN,OAEzB,IAAK,oBACH,OAAO,2BACFJ,GADL,IAEEC,SAAS,EACTI,SAAUG,EAAOE,UAErB,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEL,QAASM,EAAOE,QAAQR,UAE5B,QACE,OAAOK,ICnCPP,EAAe,CACnBC,SAAS,EACTU,KAAM,GACNC,YAAa,EACbC,aAAc,GACdC,OAAO,EACPT,SAAU,GACVU,OAAQ,GAoCKC,EAjCK,WAAmC,IAAlCT,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEN,SAAS,EACTa,OAAO,EACPT,SAAU,KAEd,IAAK,qBACH,OAAO,2BACFE,GADL,IAEEN,SAAS,EACTU,KAAMH,EAAOE,QAAQC,KACrBC,YAAaJ,EAAOE,QAAQE,YAC5BC,aAAcL,EAAOE,QAAQG,aAC7BE,OAAQP,EAAOE,QAAQK,OACvBD,OAAO,EACPT,SAAU,KAEd,IAAK,oBAEH,OADAY,QAAQC,IAAI,qBACL,2BACFlB,GADL,IAEEC,SAAS,EACTa,OAAO,EACPT,SAAUG,EAAOE,UAErB,QACE,OAAOH,IClCPY,EAAcC,YAAgB,CAClCC,WAAYf,EACZgB,KAAMN,IAGFO,EAAa,CAACC,KACdC,EAAmBC,YAAQC,IAAe,WAAf,EAAmBJ,IAQrCK,EALNC,YAAYV,EAAaM,GCK5BK,EAAkB,SAACpB,GAEvB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAIAqB,EAAY,SAAC7B,GACxB,8CAAO,WAAO8B,GAAP,qBAAAC,EAAA,6DACLD,EAxBK,CACLvB,KAAM,uBAsBD,kBAGcmB,EACdM,WACAb,WAAWlB,cAAcgC,QAAQxB,OACjCyB,OANA,cAGCzB,EAHD,gBAOqBiB,EACrBM,WACAb,WAAWlB,cAAcgC,QAAQvB,cACjCwB,OAVA,cAOCxB,EAPD,QAYa,IACdA,GAAwB,EAGxBA,EAAYA,EAEVA,EAAY,IACdA,GAAwB,KAnBvB,UAsBsBgB,EACtBM,WACAb,WAAWlB,cAAcgC,QAAQE,cAAcnC,GAC/CkC,OAzBA,eAsBCvB,EAtBD,iBA0BgBe,EAChBM,WACAb,WAAWlB,cAAcgC,QAAQG,wBACjCF,KAAK,CAACG,KAAKX,EAAMM,WAAWb,WAAWnB,UA7BvC,eA0BCa,EA1BD,iBAgCciB,EA/Cd,CACLvB,KAAM,qBACNC,QA8CqB,CACfC,OACAC,cACAC,eACAE,YArCD,iEAyCHE,QAAQC,IAAR,MACAc,EAASF,EAAgB,uCA1CtB,0DAAP,uDCRIU,EAAgB,SAAC9B,GACrB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAWA+B,EAAU,WACrB,8CAAO,WAAOT,GAAP,uBAAAC,EAAA,yDACLD,EA5BK,CACLvB,KAAM,uBA0BD,EAEgBiC,OAAbC,EAFH,EAEGA,WACoBA,GAAYA,EAASC,YAH5C,wBAKHC,IAAgBC,YAAYH,GACxBvC,EAAO,IAAI2C,IAAKJ,GANjB,kBASKD,OAAOC,SAASK,SATrB,OAUD/B,QAAQC,IAAI,aAVX,kDAYDD,QAAQH,MAAR,MAZC,yBAeDG,QAAQC,IAAI,KAfX,UAgBsByB,EAASM,QAAQ,CACtCC,OAAQ,wBAjBT,eAgBKC,EAhBL,iBAmBuBR,EAASM,QAAQ,CACvCC,OAAQ,gBApBT,gCAwBqBP,EAASM,QAAQ,CAAEC,OAAQ,gBAxBhD,QA0BY,UA1BZ,QA2BOE,EAAmB,IAAIP,IAG3BQ,EAAcC,IACd,8CAGFtB,EAvDD,CACLvB,KAAM,qBACNC,QAsDuB,CACbR,QAASiD,EAAS,GAClBhD,cAAeiD,EACfhD,KAAMA,KAIVuC,EAASY,GAAG,mBAAmB,SAACJ,GAC9BnB,EAASwB,EAAcL,EAAS,QAElCR,EAASY,GAAG,gBAAgB,WAC1Bb,OAAOe,SAASC,aAIlB1B,EAASQ,EAAc,iCAlDxB,mDAqDDR,EAASQ,EAAc,0BArDtB,gCAwDHR,EAASQ,EAAc,sBAxDpB,kEAAP,uDA6DWgB,EAAgB,SAACtD,GAC5B,8CAAO,WAAO8B,GAAP,SAAAC,EAAA,sDACLD,EAtEK,CACLvB,KAAM,iBACNC,QAoE8B,CAAER,QAASA,KACzC8B,EAASD,EAAU7B,IAFd,2CAAP,uD,iFCjGa,G,OAAA,IAA0B,0C,iCC4M1ByD,MAxKf,WACiBC,aAAY,SAACrD,GAAD,OAAWA,EAAMe,QAA1C,IACA,EAA0BuC,oBAAS,GAAnC,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACM/B,EAAWgC,cACX3C,EAAauC,aAAY,SAACrD,GAAD,OAAWA,EAAMc,cAC1C4C,EAAQC,cAkBRC,EAAa,WACXzB,OAAO0B,YAAc,IACvBL,GAAU,GAEVA,GAAU,IAmChB,OA9BAM,qBAAU,WACNF,MACD,IAEHE,qBAAU,WACqB,IAAvBhD,EAAWhB,UAEX4D,EAAM,CACFK,YAAajD,EAAWhB,SACxBkE,OAAQ,QACRC,SAAU,IACVC,YAAY,MAGrB,CAACpD,EAAWhB,WAEfgE,qBAAU,WACoB,MAAtBhD,EAAWnB,SAEX+D,EAAM,CACFK,YAAa,yBACbC,OAAQ,UACRC,SAAU,IACVC,YAAY,MAGrB,CAACpD,EAAWnB,UAEfwC,OAAOgC,iBAAiB,SAAUP,GAG9B,8BACKL,EACG,wBAEA,eAAC,IAAD,CACIa,EAAE,OACFC,EAAE,OACFC,QAAQ,OACRC,GAAG,MACHC,GAAG,UACHC,QAAS,IANb,UAQI,mBAAGC,KAAK,yBAAR,SACA,cAAC,IAAD,CACIC,IAAKC,EACLR,EAAE,OACFS,GAAG,OACHR,EAAE,WAIN,eAAC,IAAD,WAEI,cAAC,IAAD,CACIS,MAAM,SACNV,EAAE,MACFW,SAAS,MACTC,WAAW,WACXC,GAAG,IACHC,GAAG,IACHC,aAAa,MACbC,OAAQ,CAACZ,GAAI,kBARjB,SAUI,mBAAGE,KAAK,iCAAR,SACI,cAAC,IAAD,CAAMW,GAAIC,IAAWC,MAAM,gBAGnC,cAAC,IAAD,CACIT,MAAM,SACNV,EAAE,MACFW,SAAS,MACTC,WAAW,WACXC,GAAG,IACHC,GAAG,IACHC,aAAa,MACbC,OAAQ,CAACZ,GAAI,kBARjB,SAUI,mBAAGE,KAAK,0BAAR,SACI,cAAC,IAAD,CAAMW,GAAIG,IAAiBD,MAAM,gBAGzC,cAAC,IAAD,CACIT,MAAM,SACNV,EAAE,MACFW,SAAS,MACTC,WAAW,WACXC,GAAG,IACHC,GAAG,IACHC,aAAa,MACbC,OAAQ,CAACZ,GAAI,kBARjB,SAUI,mBAAGE,KAAK,gCAAR,SACI,cAAC,IAAD,CAAMW,GAAII,IAAWF,MAAM,gBAGX,KAAvBzE,EAAWnB,SAAiD,OAA7BmB,EAAWlB,cAC3C,cAAC,IAAD,CAAKiF,GAAG,OAAR,SACI,cAAC,IAAD,CACII,GAAG,KACHC,GAAG,IACHV,GAAG,cACHW,aAAa,MACbO,UAAU,IACVH,MAAM,UAINH,OAAQ,CAAEZ,GAAI,kBACdmB,QAAS,SAACC,GACVA,EAAEC,iBACFpE,EAASS,MAGT4D,SAAY,cAAC,IAAD,CAAMT,GAAIU,IAAwBR,MAAM,UAAUnB,EAAG,EAAGC,EAAG,IAhB3E,uBAuBA,cC9Lb,ICgFA2B,MAvEf,WACI,MAA4B1C,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMI,EAAa,WACXzB,OAAO0B,YAAc,IACrBL,GAAU,GAEVA,GAAU,IAWlB,OANAM,qBAAU,WACNF,MACD,IAEHzB,OAAOgC,iBAAiB,SAAUP,GAG9B,8BAEI,cAAC,IAAD,CAAQQ,EAAE,OAAOI,GAAG,UAAUH,EAAE,OAAO4B,GAAG,OAAO3B,QAAQ,OAAOC,GAAG,OAAnE,SAGI,eAAC,IAAD,WACI,cAAC,IAAD,CACIO,MAAM,SACNV,EAAE,MACFW,SAAS,MACTC,WAAW,WACXkB,EAAE,IACFf,aAAa,KACbC,OAAQ,CAAED,aAAc,KAAMJ,SAAU,OAP5C,SASI,mBAAGL,KAAK,iCAAR,SACI,cAAC,IAAD,CAAML,EAAGd,EAAS,EAAI,EAAG8B,GAAIC,IAAWC,MAAM,gBAGtD,cAAC,IAAD,CACIT,MAAM,SACNV,EAAE,MACFW,SAAS,MACTC,WAAW,WACXkB,EAAE,IACFf,aAAa,KACbC,OAAQ,CAAED,aAAc,KAAMJ,SAAU,OAP5C,SASI,mBAAGL,KAAK,0BAAR,SACI,cAAC,IAAD,CAAML,EAAGd,EAAS,EAAI,EAAG8B,GAAIG,IAAiBD,MAAM,gBAG5D,cAAC,IAAD,CACIT,MAAM,SACNV,EAAE,MACFW,SAAS,MACTC,WAAW,WACXkB,EAAE,IACFf,aAAa,KACbC,OAAQ,CAAED,aAAc,KAAMJ,SAAU,OAP5C,SASI,mBAAGL,KAAK,gCAAR,SACI,cAAC,IAAD,CAAML,EAAGd,EAAS,EAAI,EAAG8B,GAAII,IAAWF,MAAM,wB,OCyC3DY,IC/GA,MAA0B,qCCA1B,MAA0B,mCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,ICqDAC,MA7Cf,WAEI,MAA0B9C,oBAAS,GAAnC,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBAAeE,GAAf,WAQMI,EAAa,WACXzB,OAAO0B,YAAc,IACrBL,GAAU,GAEVA,GAAU,IAalB,OARAM,qBAAU,WACNF,MACD,IAIHzB,OAAOgC,iBAAiB,SAAUP,GAG9B,eAAC,IAAD,CAAQQ,EAAE,OAAOiC,GAAG,MAAMC,GAAG,MAAMC,WAAW,SAASjC,QAAQ,QAA/D,UACI,eAAC,IAAD,CAAQkC,WAAY,OAAQD,WAAW,OAAOnC,EAAE,OAAOC,EAAE,OAAOgC,GAAG,KAAKI,QAASC,EAAUC,eAAgB,YAAaC,mBAAoB,gBAAiBC,iBAAiB,YAA9K,UACI,cAAC,IAAD,CAAMC,GAAG,OAAO9B,WAAW,WAAWD,SAAS,MAAMQ,MAAM,UAA3D,qBAGA,cAAC,IAAD,CAAMwB,YAAa,KAAMC,aAAc,KAAMR,WAAY,KAAMzB,SAAS,KAAKQ,MAAM,UAAnF,+UAIJ,cAAC,IAAD,CAAKnB,EAAE,OAAOC,EAAE,OAAOgC,GAAG,MAA1B,SACI,cAAC,IAAD,CAAOjC,EAAE,OAAOC,EAAE,OAAOM,IAAKsC,UCM/BC,OA7Cf,WAEI,MAA0B5D,oBAAS,GAAnC,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBAAeE,GAAf,WAQMI,EAAa,WACXzB,OAAO0B,YAAc,IACrBL,GAAU,GAEVA,GAAU,IAalB,OARAM,qBAAU,WACNF,MACD,IAIHzB,OAAOgC,iBAAiB,SAAUP,GAG9B,eAAC,IAAD,CAAQQ,EAAE,OAAOiC,GAAG,MAAMC,GAAG,MAAMC,WAAW,SAASjC,QAAQ,QAA/D,UACI,eAAC,IAAD,CAAQkC,WAAY,OAAQD,WAAW,OAAOnC,EAAE,OAAOC,EAAE,OAAOgC,GAAG,KAAKI,QAASC,EAAUC,eAAgB,YAAaC,mBAAoB,gBAAiBC,iBAAiB,YAA9K,UACI,cAAC,IAAD,CAAMC,GAAG,OAAO9B,WAAW,WAAWD,SAAS,MAAMQ,MAAM,UAA3D,oBAGA,cAAC,IAAD,CAAMwB,YAAa,KAAMC,aAAc,KAAMR,WAAY,KAAMzB,SAAS,KAAKQ,MAAM,UAAnF,gVAIJ,cAAC,IAAD,CAAKnB,EAAE,OAAOC,EAAE,OAAOgC,GAAG,MAA1B,SACI,cAAC,IAAD,CAAOjC,EAAE,OAAOC,EAAE,OAAOM,IAAKwC,U,mBCgF/BC,OA5Hf,WAEI,MAA0B9D,oBAAS,GAAnC,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBAAeE,GAAf,WACM1C,EAAauC,aAAY,SAACrD,GAAD,OAAWA,EAAMc,cAC1CC,EAAOsC,aAAY,SAACrD,GAAD,OAAWA,EAAMe,QAC1C,EAAgCuC,oBAAS,GAAzC,mBAAO+D,EAAP,KAGA,GAHA,KAGwB/D,mBAAS,KAAjC,mBAAOgE,EAAP,KAAaC,EAAb,KACA,EAAsCjE,oBAAS,GAA/C,mBAAOkE,EAAP,KAAoBC,EAApB,KAkCM7D,EAAa,WACXzB,OAAO0B,YAAc,IACvBL,GAAU,GAEVA,GAAU,IAkBhB,OAbAM,qBAAU,WACNF,MACD,IACHE,qBAAU,WACqB,KAAvBhD,EAAWnB,SAA+C,OAA7BmB,EAAWlB,eA7ClB,WAC1B,GAA2B,KAAvBkB,EAAWnB,SAA+C,OAA7BmB,EAAWlB,eAA0B4H,EAAa,CACjFD,EAAQ,IAIR,IALiF,eAKxEG,GACP,IAAIC,EAAM5G,EAAKT,aAAaoH,GAC5B5G,EAAWlB,cAAcgC,QAAQgG,SAASD,GAAK9F,OAC5CgG,MAAK,SAACC,GAAD,OAASC,MAAMD,EAAIE,QAAQ,UAAW,6BAC3CH,MAAK,SAACI,GAAD,OAAcA,EAASC,UAC5BL,MAAK,SAACM,GACLZ,GAAQ,SAACa,GAAD,6BACHA,GADG,CAEN,CAAEC,GAAIV,EAAKQ,SAAUA,WAEtBN,MAAK,WACFH,GAAK3G,EAAKT,aAAagI,OAAS,IAClCb,GAAe,GACfF,GAAQ,SAACa,GAAD,OACNA,EAAUG,MAAK,SAAC7G,EAAG8G,GAAJ,OAAU9G,EAAE2G,GAAKG,EAAEH,GAAK,GAAK,YAIjDI,OAAM,SAACC,GACNhI,QAAQC,IAAI+H,OAnBThB,EAAI,EAAGA,EAAI3G,EAAKT,aAAagI,OAAQZ,IAAM,EAA3CA,IAwCTiB,KAGD,CAAC5H,IAGNoB,OAAOgC,iBAAiB,SAAUP,GAG9B,8BACwB,KAAvB9C,EAAWnB,SACyB,OAA7BmB,EAAWlB,eAA0ByH,EACrC,eAAC,IAAD,CAAQhB,GAAG,KAAKuC,WAAY,4CAA6CtC,GAAG,KAAKrB,GAAG,MAAMX,QAAQ,KAAlG,UAEE,cAAC,IAAD,CAAMuE,MAAO,CAAEC,UAAW,SAAU/D,SAAU,GAAIC,WAAY,QAA9D,SACG,oBAE0B,GAA5BjE,EAAKT,aAAagI,OACjB,cAAC,IAAD,CAAMO,MAAO,CAAEC,UAAW,SAAU/D,SAAU,GAAIC,WAAY,QAA9D,SACG,kCAEA,KACL,cAAC,KAAD,CAAY+D,QAAS,EAAGC,SAAS,OAAOC,SAAS,OAAjD,SACGlI,EAAKrB,QACJ,qCACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAMmJ,MAAO,CAAEC,UAAW,UAA1B,2BAKFxB,EAAK4B,KAAI,SAACvB,EAAKwB,GAEb,OAEE,eAAC,IAAD,CAAQrE,MAAM,SAAqBV,EAAE,QAAQI,GAAG,iBAAiBU,GAAG,MAAMD,GAAG,MAAME,aAAa,KAAKO,UAAU,KAAKpB,QAAQ,KAA5H,UACE,eAAC,IAAD,CAAMQ,MAAM,SAASE,WAAW,WAAWD,SAAS,KAApD,cAA2D4C,EAAIQ,SAAS/H,KAAxE,OACA,cAAC,IAAD,CACEgJ,IAAKzB,EAAIQ,SAAS/H,KAClBuE,IAAKgD,EAAIQ,SAASkB,MAAMrB,QAAQ,UAAW,yBAC3CsB,QAAQ,QACRC,UAAU,QACVC,IAAe,WAGjB,eAAC,IAAD,CAAMX,MAAO,CAAEC,UAAW,UAA1B,eAAwC,mCAASnB,EAAIQ,SAASsB,WAAW,GAAGC,WAApC,OAAxC,KAAoG/B,EAAIQ,SAASsB,WAAW,GAAGE,MAA/H,OACA,eAAC,IAAD,CAAMd,MAAO,CAAEC,UAAW,UAA1B,eAAwC,mCAASnB,EAAIQ,SAASsB,WAAW,GAAGC,WAApC,OAAxC,KAAoG/B,EAAIQ,SAASsB,WAAW,GAAGE,MAA/H,OACA,eAAC,IAAD,CAAMd,MAAO,CAAEC,UAAW,UAA1B,eAAwC,mCAASnB,EAAIQ,SAASsB,WAAW,GAAGC,WAApC,OAAxC,KAAoG/B,EAAIQ,SAASsB,WAAW,GAAGE,MAA/H,OACA,eAAC,IAAD,CAAMd,MAAO,CAAEC,UAAW,UAA1B,eAAwC,mCAASnB,EAAIQ,SAASsB,WAAW,GAAGC,WAApC,OAAxC,KAAoG/B,EAAIQ,SAASsB,WAAW,GAAGE,MAA/H,OACA,eAAC,IAAD,CAAMd,MAAO,CAAEC,UAAW,UAA1B,eAAwC,mCAASnB,EAAIQ,SAASsB,WAAW,GAAGC,WAApC,OAAxC,KAAoG/B,EAAIQ,SAASsB,WAAW,GAAGE,MAA/H,OACA,eAAC,IAAD,CAAMd,MAAO,CAAEC,UAAW,UAA1B,eAAwC,mCAASnB,EAAIQ,SAASsB,WAAW,GAAGC,WAApC,OAAxC,KAAoG/B,EAAIQ,SAASsB,WAAW,GAAGE,MAA/H,OACA,eAAC,IAAD,CAAMd,MAAO,CAAEC,UAAW,UAA1B,eAAwC,mCAASnB,EAAIQ,SAASsB,WAAW,GAAGC,WAApC,OAAxC,KAAoG/B,EAAIQ,SAASsB,WAAW,GAAGE,MAA/H,SAhB0BR,WA0BnC,Q,OC1HJ,QCAA,OAA0B,gCCA1B,OAA0B,oCCA1B,OAA0B,oCCA1B,ICAA,IDAA,IAA0B,sCEA1B,OAA0B,sC,4BC8D1BS,OAtDf,WAEI,MAA0BtG,oBAAS,GAAnC,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBAAeE,GAAf,WAQMI,EAAa,WACXzB,OAAO0B,YAAc,IACrBL,GAAU,GAEVA,GAAU,IAalB,OARAM,qBAAU,WACNF,MACD,IAIHzB,OAAOgC,iBAAiB,SAAUP,GAG9B,eAAC,IAAD,CAAQQ,EAAE,OAAOiC,GAAG,MAAMC,GAAG,MAAMC,WAAW,SAASjC,QAAQ,QAA/D,UACI,eAAC,IAAD,CAAQkC,WAAY,OAAQD,WAAW,OAAOnC,EAAE,OAAOC,EAAE,OAAOgC,GAAG,KAAKI,QAASC,EAAUC,eAAgB,YAAaC,mBAAoB,gBAAiBC,iBAAiB,YAA9K,UACI,cAAC,IAAD,CAAMC,GAAG,OAAO9B,WAAW,WAAWD,SAAS,MAAMQ,MAAM,UAA3D,qBAGA,cAAC,IAAD,CAAMwB,YAAa,KAAMC,aAAc,KAAMR,WAAY,KAAMzB,SAAS,KAAKQ,MAAM,UAAnF,0FAGA,cAAC,IAAD,CAAMwB,YAAa,KAAMC,aAAc,KAAMR,WAAY,KAAMzB,SAAS,KAAKQ,MAAM,UAAnF,0FAGA,cAAC,IAAD,CAAMwB,YAAa,KAAMC,aAAc,KAAMR,WAAY,KAAMzB,SAAS,KAAKQ,MAAM,UAAnF,0FAGA,cAAC,IAAD,CAAMwB,YAAa,KAAMC,aAAc,KAAMR,WAAY,KAAMzB,SAAS,KAAKQ,MAAM,UAAnF,8FAIJ,cAAC,IAAD,CAAKnB,EAAE,OAAOC,EAAE,OAAOgC,GAAG,MAA1B,SACI,cAAC,IAAD,CAAOjC,EAAE,OAAOC,EAAE,OAAOM,IAAKkF,UC2O/BC,OAjQf,WACE,IAAMrI,EAAWgC,cACX3C,EAAauC,aAAY,SAACrD,GAAD,OAAWA,EAAMc,cAC1CC,EAAOsC,aAAY,SAACrD,GAAD,OAAWA,EAAMe,QAC1C,EAAgCuC,mBAAS,IAAzC,mBAAOyG,EAAP,KAAiBC,EAAjB,KACA,EAAsC1G,oBAAS,GAA/C,mBAAoB2G,GAApB,WACA,EAA4B3G,mBAAS,GAArC,mBAAO4G,EAAP,KAAeC,EAAf,KAEA,EAA0B7G,oBAAS,GAAnC,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAoDF,oBAAS,GAA7D,mBAEA,GAFA,UAEsCA,oBAAS,IAA/C,mBAAO8G,EAAP,KAYMC,GAZN,KAYYC,aAXW,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAQbC,GAHcC,aAAaV,GAEjB1G,eACK,GAKnB,EAAsCL,mBAAS,IAA/C,mBAEMM,GAFN,UAEmB,WACbzB,OAAO0B,YAAc,IACvBL,GAAU,GAEVA,GAAU,KAgEd,OA5DAM,qBAAU,WACRF,MACC,IAEHzB,OAAOgC,iBAAiB,SAAUP,GA2ClCE,qBAAU,WACmB,KAAvBhD,EAAWnB,SAA+C,OAA7BmB,EAAWlB,cANjB,KAAvBkB,EAAWnB,SAA+C,OAA7BmB,EAAWlB,eAC1C6B,EAASD,EAAUV,EAAWnB,UAQzBmL,IACHA,GAAe,EACfrJ,EAASS,QAGZ,CAACpB,EAAWlB,cAAekB,EAAWnB,UAKvC,gCAEG4D,EACC,wBAOA,gCAEE,cAAC,EAAD,IACA,cAAC,IAAD,CAAMa,EAAE,OAAOI,GAAG,UAAUiC,QAASuE,GAAYrE,eAAgB,WAAYC,mBAAoB,gBAAiBC,iBAAiB,YAAnI,SACE,eAAC,IAAD,CAAQzC,EAAE,OAAOK,QAAS,KAAMwG,KAAK,OAAO1E,WAAW,OAAO2E,MAAM,QAAQzE,QAAS0E,GAAYxE,eAAgB,WAAYC,mBAAoB,gBAAiBC,iBAAiB,YAAnL,UAEE,eAAC,IAAD,CAAQzC,EAAE,OAAOiC,GAAG,MAAMC,GAAG,MAAMC,WAAW,SAASjC,QAAQ,QAA/D,UACE,eAAC,IAAD,CAAQkC,WAAY,OAAQD,WAAW,OAAOnC,EAAE,OAAOC,EAAE,OAAOgC,GAAG,KAAKnB,GAAG,KAAKuB,QAASC,EAAUC,eAAgB,YAAaC,mBAAoB,gBAAiBC,iBAAiB,YAAtL,UACE,cAAC,IAAD,CAAMuE,GAAG,OAAOtE,GAAG,OAAO9B,WAAW,WAAWD,SAAS,MAAMQ,MAAM,UAArE,oCAGA,cAAC,IAAD,CAAMwB,YAAa,KAAMC,aAAc,KAAMR,WAAY,KAAMzB,SAAS,KAAKQ,MAAM,UAAnF,mKAKF,cAAC,IAAD,CAAKnB,EAAE,OAAOC,EAAE,OAAOiC,GAAG,OAA1B,SACE,cAAC,IAAD,CAAOlC,EAAE,OAAOC,EAAE,OAAOM,IAAK0G,SAMlC,cAAC,IAAD,CAAQhF,GAAG,KAAKpB,GAAG,MAAMiB,EAAE,MAAMoF,SAAS,QAA1C,SACE,cAAC,IAAD,CACEzG,GAAG,MACHT,EAAE,MACFa,GAAG,KACHoB,GAAG,KACHC,GAAG,KACHnB,aAAa,MANf,SAQ+B,KAA5BoG,OAAOxK,EAAKV,aACX,mCACE,cAAC,IAAD,CAAMwI,MAAO,CAAEC,UAAW,UAAY/D,SAAS,MAA/C,kCAKF,qCACE,cAAC,IAAD,CAAMA,SAAS,KAAKQ,MAAM,UAAUsD,MAAO,CAAEC,UAAW,UAAxD,iCAGA,cAAC,IAAD,IACA,cAAC,IAAD,CAAMvD,MAAM,UAAUsD,MAAO,CAAEC,UAAW,UAA1C,SACGiB,IAGH,eAAC,IAAD,CAAQzF,QAAQ,KAAhB,UACE,eAAC,IAAD,CAAMiB,MAAM,UAAUsD,MAAO,CAAEC,UAAW,SAAU/D,SAAU,GAAIC,WAAY,QAA9E,UACGjE,EAAKV,YADR,QAC0B,iBAE1B,eAAC,IAAD,CAAQ+K,GAAG,MAAM9G,QAAQ,KAAzB,UACE,cAAC,IAAD,CAAMF,EAAE,MAAMC,EAAE,MAAMoC,QAAS+E,GAAW7E,eAAgB,YAAaC,mBAAoB,gBAAiBL,WAAY,OAAQM,iBAAiB,YAAjJ,SACE,cAAC,IAAD,CACEzC,EAAE,MACFC,EAAE,MACFoH,SAAU,gBAEVjH,GAAI,cACJY,OAAQ,CAAEZ,GAAI,eACde,MAAM,QACN,aACAI,QAAS,WACHuE,EAAS,GACXC,EAAUD,EAAS,QAS3B,cAAC,IAAD,CAAM3E,MAAM,UAAZ,SACG2E,IAEH,cAAC,IAAD,CAAM9F,EAAE,MAAMC,EAAE,MAAMoC,QAASiF,GAAU/E,eAAgB,YAAaC,mBAAoB,gBAAiBL,WAAY,OAAQM,iBAAiB,YAAhJ,SACE,cAAC,IAAD,CACEzC,EAAE,MACFC,EAAE,MACFoH,SAAU,gBAEVjH,GAAI,cACJY,OAAQ,CAAEZ,GAAI,eACde,MAAM,QACN,aACAI,QAAS,WACHuE,EAAS,IACXC,EAAUD,EAAS,WAS7B,cAAC,IAAD,CAAM9F,EAAE,OAAOC,EAAE,OAAOoC,QAASkF,GAAUhF,eAAgB,YAAaC,mBAAoB,gBAAiBL,WAAY,OAAzH,SACE,cAAC,IAAD,CACEnC,EAAE,OACFC,EAAE,OACFoH,SAAU,gBAEVjH,GAAI,cACJY,OAAQ,CAAEZ,GAAI,eACde,MAAM,QACN,aACAI,QAAS,SAACC,GA5KlB,IAACgG,EA6KShG,EAAEC,iBA7KX+F,EA8KmB1B,EA7K/BE,IAGDwB,GAAW,IAGf5B,EAAY,4BACZC,GAAe,GACfnJ,EAAWlB,cAAcgC,QACtBiK,KAAKD,GACLE,KAAK,CAEJC,GAAI,6CACJ/J,KAAMlB,EAAWnB,QACjBgK,MAAO7I,EAAWjB,KAAKmM,MAAMC,OAAO,EAAIL,GAASM,WAAY,WAE9DC,KAAK,SAAS,SAACzD,GACdhI,QAAQC,IAAI+H,GACZsB,EAAY,uDACZC,GAAe,MAEhBpC,MAAK,SAACuE,GACLpC,EACE,0BAEFC,GAAe,GACfxI,EAASD,EAAUV,EAAWnB,8BAoKxB,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,YAOR,cAAC,EAAD,QClRS0M,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU1L,MAAOA,EAAjB,SACE,cAAC,KAAD,CAAgB2L,UAAQ,EAAxB,SACE,cAAC,GAAD,UAINC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.4a14b716.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  totalSupply: 0,  \r\n  tokensOfUser: [],\r\n  error: false,\r\n  errorMsg: \"\",  \r\n  reward: 0,\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        name: action.payload.name,\r\n        totalSupply: action.payload.totalSupply,        \r\n        tokensOfUser: action.payload.tokensOfUser,\r\n        reward: action.payload.reward,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      console.log(\"check data failed\")\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  //console.log(\"success\")\r\n\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  //console.log(\"failed\")\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call();\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n\r\n      if (totalSupply<200){\r\n        totalSupply=totalSupply*1;\r\n      }\r\n      else{\r\n        totalSupply=totalSupply;\r\n      }\r\n      if (totalSupply>0){\r\n        totalSupply=totalSupply+144;\r\n      }\r\n      \r\n      let tokensOfUser = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.walletOfOwner(account)\r\n        .call();      \r\n      let reward = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.getReflectionBalances()\r\n        .call({from:store.getState().blockchain.account });\r\n      \r\n      //console.log(reward)\r\n      let temp = await dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n          totalSupply,          \r\n          tokensOfUser,\r\n          reward,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/AvaxFoxes.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        // Request account access if needed\r\n        await window.ethereum.enable();\r\n        console.log(\"connected\");        \r\n      } catch (error) {\r\n        console.error(error);\r\n      }      \r\n      try {\r\n        console.log(\"1\");\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        \r\n        //const NetworkData = await SmartContract.networks[networkId];\r\n        const chainId = await ethereum.request({ method: 'eth_chainId' });\r\n        //console.log(chainId);\r\n        if (chainId==\"0xa86a\") {       //0xa86a mainnetin chain id'si, 0xa869 fuji netin chain idsi\r\n          const SmartContractObj = new Web3EthContract(\r\n            //SmartContract.abi,\r\n            //NetworkData.address            \r\n            SmartContract.abi,\r\n            \"0x9E073C3613cF70ebB666431f27cC2CD97b9F0ddB\"\r\n          );\r\n          //console.log(SmartContractObj);\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });          \r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Avalanche.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/website_logo.30ff4198.png\";","import React, {useState, useEffect}  from 'react'\r\nimport {Box, HStack, Image, Button, Spacer, Text} from '@chakra-ui/react'\r\nimport {\r\n    Menu,\r\n    MenuButton,\r\n    MenuList,\r\n    MenuItem,\r\n    MenuItemOption,\r\n    MenuGroup,\r\n    MenuOptionGroup,\r\n    MenuIcon,\r\n    MenuCommand,\r\n    MenuDivider,\r\n    IconButton\r\n  } from \"@chakra-ui/react\"\r\nimport { useToast } from \"@chakra-ui/react\"\r\nimport Logo from \"../assets/images/website_logo.png\"\r\nimport {FaTwitter, FaTelegramPlane, FaDiscord } from \"react-icons/fa\"\r\nimport {GiHamburgerMenu} from \"react-icons/gi\"\r\nimport {MdAccountBalanceWallet, MdConstruction} from \"react-icons/md\"\r\nimport {IoIosConstruct} from \"react-icons/io\"\r\nimport { Icon } from '@chakra-ui/icons';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    AlertTitle,\r\n    AlertDescription,\r\n    CloseButton\r\n  } from \"@chakra-ui/react\"\r\n\r\n\r\n\r\n\r\nfunction Navbar() {\r\n    const data = useSelector((state) => state.data);\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const toast = useToast()\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false)\r\n\r\n    const claimRewards = () => {    \r\n        if (data.reward <= 0) {\r\n          console.log(\"no rewards to claim\")\r\n          return;\r\n        }\r\n        console.log(\"claiming rewards\")\r\n        blockchain.smartContract.methods.claimRewards()\r\n            .send({from:blockchain.account })      \r\n          .then((receipt) => {\r\n            console.log(receipt);        \r\n            dispatch(fetchData(blockchain.account));\r\n          });\r\n      };\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n          setButton(true);\r\n        } else {\r\n          setButton(false);\r\n        }\r\n      };\r\n    \r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (blockchain.errorMsg == \"\"){}\r\n        else{\r\n            toast({\r\n                description: blockchain.errorMsg,\r\n                status: \"error\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n            })}\r\n        \r\n    }, [blockchain.errorMsg]);\r\n\r\n    useEffect(() => {\r\n        if (blockchain.account == null){}\r\n        else{\r\n            toast({\r\n                description: \"Connected Successfully\",\r\n                status: \"success\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n            })}\r\n        \r\n    }, [blockchain.account]);\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <div>\r\n            {button ? \r\n                <div></div>\r\n            : \r\n                <HStack\r\n                    w='100%'\r\n                    h='20vh'\r\n                    spacing='auto'\r\n                    pr='5vw'\r\n                    bg='#43403f'\r\n                    marginX={'0'}\r\n                >  \r\n                    <a href=\"https://avaxfoxes.com/\" >          \r\n                    <Image\r\n                        src={Logo}\r\n                        w='25vw'\r\n                        ml='35vw'               \r\n                        h='20vh'                        \r\n                    />\r\n                    </a>\r\n                    \r\n                    <HStack >\r\n                        \r\n                        <Box\r\n                            align='center'\r\n                            w='4vw'\r\n                            fontSize='3xl'\r\n                            fontWeight='semibold'                            \r\n                            px='4'\r\n                            py='1'\r\n                            borderRadius='150'\r\n                            _hover={{bg: \"blackAlpha.400\"}}         \r\n                        >\r\n                            <a href='https://twitter.com/avax_foxes'>\r\n                                <Icon as={FaTwitter} color='#9a6e5d' />\r\n                            </a>\r\n                        </Box>\r\n                        <Box\r\n                            align='center'\r\n                            w='4vw'\r\n                            fontSize='3xl'\r\n                            fontWeight='semibold'\r\n                            px='4'\r\n                            py='1'\r\n                            borderRadius='150'\r\n                            _hover={{bg: \"blackAlpha.400\"}}         \r\n                        >\r\n                            <a href='https://t.me/avax_foxes'>\r\n                                <Icon as={FaTelegramPlane} color='#9a6e5d'/>\r\n                            </a>\r\n                        </Box>\r\n                        <Box\r\n                            align='center'\r\n                            w='4vw'\r\n                            fontSize='3xl'\r\n                            fontWeight='semibold'\r\n                            px='4'\r\n                            py='1'                            \r\n                            borderRadius='150'\r\n                            _hover={{bg: \"blackAlpha.400\"}}         \r\n                        >\r\n                            <a href='https://discord.gg/x2DqFMfV8Z'>\r\n                                <Icon as={FaDiscord} color='#9a6e5d'/>\r\n                            </a>\r\n                        </Box>\r\n                        {blockchain.account === \"\" ||   blockchain.smartContract === null ? (\r\n                        <Box ml='25vw'>\r\n                            <Button\r\n                                px='22'\r\n                                py='7'\r\n                                bg='transparent'\r\n                                borderRadius='150'\r\n                                boxShadow='5'\r\n                                color='#9a6e5d'\r\n                                //mx-auto\r\n                                //bgGradient={'linear(to-r, blackAlpha.600, transparent)'}\r\n                                //variant=\"outline\"\r\n                                _hover={{ bg: \"blackAlpha.400\" }}\r\n                                onClick={(e) => {\r\n                                e.preventDefault();\r\n                                dispatch(connect());\r\n                                //getData();\r\n                                }}\r\n                                leftIcon=  {<Icon as={MdAccountBalanceWallet} color='#9a6e5d' w={7} h={7}/>}\r\n                            >\r\n                                \r\n                                CONNECT\r\n                            </Button>   \r\n                        </Box>):(\r\n\r\n                            null\r\n                        \r\n\r\n                        )}          \r\n                    </HStack>\r\n                         \r\n                </HStack>\r\n                \r\n            }\r\n                       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export default __webpack_public_path__ + \"static/media/avalanche.7272e61c.png\";","import React, { useState, useEffect } from 'react'\r\nimport AvalancheImage from '../assets/images/avalanche.png'\r\nimport { Box, HStack, VStack, Image, Button, Spacer, Text } from '@chakra-ui/react'\r\nimport { FaTwitter, FaTelegramPlane, FaDiscord } from \"react-icons/fa\"\r\nimport { GiHamburgerMenu } from \"react-icons/gi\"\r\nimport { MdAccountBalanceWallet } from \"react-icons/md\"\r\nimport { Icon } from '@chakra-ui/icons';\r\n\r\n\r\nfunction Footer() {\r\n    const [button, setButton] = useState(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(true);\r\n        } else {\r\n            setButton(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <HStack w='100%' bg='#eadece' h='20vh' pl='20vw' spacing='auto' pr='15vw'>\r\n                \r\n\r\n                <HStack >\r\n                    <Box\r\n                        align='center'\r\n                        w='4vw'\r\n                        fontSize='3xl'\r\n                        fontWeight='semibold'\r\n                        p='3'\r\n                        borderRadius='xl'\r\n                        _hover={{ borderRadius: 'xl', fontSize: '4xl' }}\r\n                    >\r\n                        <a href='https://twitter.com/avax_foxes'>\r\n                            <Icon h={button ? 5 : 8} as={FaTwitter} color='#9a6e5d' />\r\n                        </a>\r\n                    </Box>\r\n                    <Box\r\n                        align='center'\r\n                        w='4vw'\r\n                        fontSize='3xl'\r\n                        fontWeight='semibold'\r\n                        p='3'\r\n                        borderRadius='xl'\r\n                        _hover={{ borderRadius: 'xl', fontSize: '4xl' }}\r\n                    >\r\n                        <a href='https://t.me/avax_foxes'>\r\n                            <Icon h={button ? 5 : 8} as={FaTelegramPlane} color='#9a6e5d' />\r\n                        </a>\r\n                    </Box>\r\n                    <Box\r\n                        align='center'\r\n                        w='4vw'\r\n                        fontSize='3xl'\r\n                        fontWeight='semibold'\r\n                        p='3'\r\n                        borderRadius='xl'\r\n                        _hover={{ borderRadius: 'xl', fontSize: '4xl' }}\r\n                    >\r\n                        <a href='https://discord.gg/x2DqFMfV8Z'>\r\n                            <Icon h={button ? 5 : 8} as={FaDiscord} color='#9a6e5d' />\r\n                        </a>\r\n                    </Box>\r\n                </HStack>\r\n            </HStack>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useState, useEffect}  from 'react'\r\nimport {Flex, VStack, Box, HStack, Text, Accordion, AccordionItem, AccordionButton, AccordionPanel, AccordionIcon} from '@chakra-ui/react'\r\nfunction FAQ() {\r\n    \r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(false);   \r\n    \r\n    \r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false)\r\n\r\n    \r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n          setButton(true);\r\n        } else {\r\n          setButton(false);\r\n        }\r\n      };\r\n    \r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    \r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <Flex bg='white'>\r\n                <VStack w='100%' px='3vw' py='5vw'>\r\n                  <Text pb='4vh' style={{ textAlign: \"center\", fontSize: 45, fontWeight: \"bold\" }} >\r\n                    {\"FAQ\"}\r\n                  </Text>\r\n                  <Accordion w='60vw' >\r\n                    <AccordionItem bg=\"gray.200\" borderRadius='xl'>\r\n                      <h2>\r\n                        <AccordionButton>\r\n                          <Box flex=\"1\" fontSize='xl' textAlign=\"center\">\r\n                            What are Treasure Hunters?\r\n                          </Box>\r\n                          <AccordionIcon />\r\n                        </AccordionButton>\r\n                      </h2>\r\n                      <AccordionPanel fontSize='md' pb={4} textAlign=\"center\">\r\n                        100 of the Avax Foxes will have the trait Treasure Hunter. People who mint them will receive 5 Avax.\r\n                      </AccordionPanel>\r\n                    </AccordionItem>\r\n                    <AccordionItem borderRadius='xl'>\r\n                      <h2>\r\n                        <AccordionButton>\r\n                          <Box flex=\"1\" fontSize='xl' textAlign=\"center\">\r\n                            What is the top minter leaderboard?\r\n                          </Box>\r\n                          <AccordionIcon />\r\n                        </AccordionButton>\r\n                      </h2>\r\n                      <AccordionPanel fontSize='md' pb={4} textAlign=\"center\">\r\n                        At the end of the minting phase, the account which has the highest minting points will receive the prize of 100 Avax.\r\n                        Treasure Hunters are equal to 10 minting points each and rest of the collection is equal to just 1 minting point.\r\n                      </AccordionPanel>\r\n                    </AccordionItem>\r\n                    <AccordionItem bg=\"gray.200\" borderRadius='xl'>\r\n                      <h2>\r\n                        <AccordionButton>\r\n                          <Box flex=\"1\" fontSize='xl' textAlign=\"center\">\r\n                            What is reflection?\r\n                          </Box>\r\n                          <AccordionIcon />\r\n                        </AccordionButton>\r\n                      </h2>\r\n                      <AccordionPanel fontSize='md' pb={4} textAlign=\"center\">\r\n                        For every minted Avax Fox %10 of minting price will be shared among minters.\r\n                        Also %5 of every sale in FoxMarket will be distributed among AvaxFoxes holders and original minters of AvaxFoxes earn 2% royalties each time their AvaxFoxes is resold!\r\n                      </AccordionPanel>\r\n                    </AccordionItem>\r\n\r\n                    <AccordionItem bg=\"white\" borderRadius='xl'>\r\n                      <h2>\r\n                        <AccordionButton>\r\n                          <Box flex=\"1\" fontSize='xl' textAlign=\"center\">\r\n                            Is there a limit on minting?\r\n                          </Box>\r\n                          <AccordionIcon />\r\n                        </AccordionButton>\r\n                      </h2>\r\n                      <AccordionPanel fontSize='md' pb={4} textAlign=\"center\">\r\n                        We will limit people to mint 20 Avax Fox per transaction. However, you can visit the minting section as many times as you like.\r\n                      </AccordionPanel>\r\n                    </AccordionItem>\r\n                    <AccordionItem bg=\"gray.200\" borderRadius='xl'>\r\n                      <h2>\r\n                        <AccordionButton>\r\n                          <Box flex=\"1\" fontSize='xl' textAlign=\"center\">\r\n                            Can I sell my Avax Fox?\r\n                          </Box>\r\n                          <AccordionIcon />\r\n                        </AccordionButton>\r\n                      </h2>\r\n                      <AccordionPanel fontSize='md' pb={4} textAlign=\"center\">\r\n                        Ofcourse all Avax Foxes are stored with ERC-721 contract. You can sell them in any marketplace that supports Avalanche and also our FoxMarket.\r\n                      </AccordionPanel>\r\n                    </AccordionItem>\r\n                  </Accordion>\r\n                </VStack>\r\n              </Flex>\r\n    )\r\n}\r\n\r\nexport default FAQ\r\n\r\n","export default __webpack_public_path__ + \"static/media/cerceve1.4c78808a.png\";","export default __webpack_public_path__ + \"static/media/nftGif.2f921a05.gif\";","export default __webpack_public_path__ + \"static/media/sample_im1.840b2ba4.png\";","export default __webpack_public_path__ + \"static/media/sample_im2.ec3f03d0.png\";","export default __webpack_public_path__ + \"static/media/sample_im3.54c332f8.png\";","export default __webpack_public_path__ + \"static/media/sample_im4.15d9033e.png\";","import React, { useState, useEffect } from 'react'\r\nimport { Flex, VStack, Box, HStack, Text, Accordion, AccordionItem, AccordionButton, AccordionPanel, AccordionIcon, Image } from '@chakra-ui/react'\r\nimport cerceve1 from \"../assets/images/cerceve1.png\"\r\nimport nftGif from \"../assets/images/nftGif.gif\"\r\nimport sampleim1 from \"../assets/images/sample_im1.png\"\r\nimport sampleim2 from \"../assets/images/sample_im2.png\"\r\nimport sampleim3 from \"../assets/images/sample_im3.png\"\r\nimport sampleim4 from \"../assets/images/sample_im4.png\"\r\nfunction WeGiveBack() {\r\n\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(false);\r\n\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false)\r\n\r\n\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(true);\r\n        } else {\r\n            setButton(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <HStack w='100%' pt='5vh' pb='5vh' alignItems='center' spacing='100px' >\r\n            <VStack marginLeft={'15vw'} alignItems='auto' w='45vw' h='40vh' pt='2%' bgImage={cerceve1} backgroundSize={'100% 100%'} backgroundPosition={'center center'} backgroundRepeat='no-repeat'>\r\n                <Text mx='auto' fontWeight=\"semibold\" fontSize='4xl' color='#52392E'>\r\n                    Charity\r\n                </Text>\r\n                <Text paddingLeft={'10'} paddingRight={'10'} marginLeft={'10'} fontSize='xl' color='#52392E'>\r\n                5% of all primary sales will go to two charities: the Girls Not Brides, a charity that tackles child marriage, and the Malala Fund, a non-profit organization that champions every girl’s right to 12 years of free, safe, quality education. All donations will be shared on social media to keep ourselves accountable.                 \r\n                </Text>                \r\n            </VStack>\r\n            <Box w='25vw' h='58vh' pt='4vh'>\r\n                <Image w='30vw' h='50vh' src={sampleim2} />\r\n            </Box>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default WeGiveBack\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Flex, VStack, Box, HStack, Text, Accordion, AccordionItem, AccordionButton, AccordionPanel, AccordionIcon, Image } from '@chakra-ui/react'\r\nimport cerceve1 from \"../assets/images/cerceve1.png\"\r\nimport nftGif from \"../assets/images/nftGif.gif\"\r\nimport sampleim1 from \"../assets/images/sample_im1.png\"\r\nimport sampleim2 from \"../assets/images/sample_im2.png\"\r\nimport sampleim3 from \"../assets/images/sample_im3.png\"\r\nimport sampleim4 from \"../assets/images/sample_im4.png\"\r\nfunction Artist() {\r\n\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(false);\r\n\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false)\r\n\r\n\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(true);\r\n        } else {\r\n            setButton(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <HStack w='100%' pt='5vh' pb='5vh' alignItems='center' spacing='100px' >\r\n            <VStack marginLeft={'15vw'} alignItems='auto' w='45vw' h='40vh' pt='2%' bgImage={cerceve1} backgroundSize={'100% 100%'} backgroundPosition={'center center'} backgroundRepeat='no-repeat'>\r\n                <Text mx='auto' fontWeight=\"semibold\" fontSize='4xl' color='#52392E'>\r\n                    Artist\r\n                </Text>\r\n                <Text paddingLeft={'10'} paddingRight={'10'} marginLeft={'10'} fontSize='xl' color='#52392E'>\r\n                Saliha Uguz. She’s an artist/designer who has 5+ years of experience working at Microsoft. She’s incredibly passionate about crypto, NFT and metaverse. Keira has always been active in the art/design community and wants to promote female empowerment with her art. You can follow her on Instagram @wanderellaco.                \r\n                </Text>                \r\n            </VStack>\r\n            <Box w='25vw' h='58vh' pt='4vh'>\r\n                <Image w='30vw' h='50vh' src={sampleim3} />\r\n            </Box>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default Artist\r\n\r\n","import React, {useState, useEffect}  from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Flex, VStack, Box, HStack, Text, Accordion, AccordionItem, AccordionButton, AccordionPanel, AccordionIcon, SimpleGrid, Spacer, Image} from '@chakra-ui/react'\r\nfunction OwnedNFTS() {\r\n    \r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(false);   \r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [viewNFTs, setviewNFTs] = useState(false);\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false)\r\n    const [NFTS, setNFTS] = useState([]);\r\n    const [LoadingNFTS, setLoadingNFTS] = useState(false);\r\n\r\n    const fetchMetatDataForNFTS = () => {\r\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null && LoadingNFTS) {\r\n          setNFTS([]);\r\n          //blockchain.smartContract.methods.mintsOfOwner(blockchain.account).call().then(console.log)\r\n          //blockchain.smartContract.methods.getMostMinters().call().then(console.log)\r\n    \r\n          for (let i = 0; i < data.tokensOfUser.length; i++) {\r\n            let nft = data.tokensOfUser[i];\r\n            blockchain.smartContract.methods.tokenURI(nft).call()\r\n              .then((uri) => fetch(uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")))\r\n              .then((response) => response.json())\r\n              .then((metaData) => {\r\n                setNFTS((prevState) => [\r\n                  ...prevState,\r\n                  { id: nft, metaData: metaData },\r\n                ]);\r\n              }).then(function () {\r\n                if (i == data.tokensOfUser.length - 1) {\r\n                  setLoadingNFTS(false)\r\n                  setNFTS((prevState) =>\r\n                    prevState.sort((a, b) => a.id < b.id ? 1 : -1)\r\n                  )\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          }\r\n        }\r\n    \r\n      };\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n          setButton(true);\r\n        } else {\r\n          setButton(false);\r\n        }\r\n      };\r\n    \r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n          fetchMetatDataForNFTS();\r\n         \r\n        }\r\n      }, [data]);\r\n    \r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <div>\r\n        {blockchain.account !== \"\" &&\r\n                blockchain.smartContract !== null && viewNFTs ? (\r\n                <VStack pt='30' bgGradient={'linear(to-b, transparent, blackAlpha.600)'} pb='5%' px='3vw' spacing='3%'>\r\n\r\n                  <Text style={{ textAlign: \"center\", fontSize: 35, fontWeight: \"bold\" }} >\r\n                    {\"Your Avax Foxes\"}\r\n                  </Text>\r\n                  {data.tokensOfUser.length == 0 ? (\r\n                    <Text style={{ textAlign: \"center\", fontSize: 25, fontWeight: \"bold\" }} >\r\n                      {\"You don't have any Avax Foxes\"}\r\n                    </Text>\r\n                  ) : (null)}\r\n                  <SimpleGrid columns={4} spacingX=\"40px\" spacingY=\"20px\">\r\n                    {data.loading ? (\r\n                      <>\r\n                        <Spacer />\r\n                        <Text style={{ textAlign: \"center\" }}>\r\n                          loading...\r\n                        </Text>\r\n                      </>\r\n                    ) : (\r\n                      NFTS.map((nft, index) => {\r\n\r\n                        return (\r\n\r\n                          <VStack align='center' key={index} w='20vw ' bg='whiteAlpha.600' py='2vh' px='1vw' borderRadius='xl' boxShadow='xl' spacing='3%'>\r\n                            <Text align='center' fontWeight='semiBold' fontSize='xl'> {nft.metaData.name} </Text>\r\n                            <Image\r\n                              alt={nft.metaData.name}\r\n                              src={nft.metaData.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")}\r\n                              boxSize=\"300px\"\r\n                              objectFit=\"cover\"\r\n                              pos={'center', 'center'}\r\n                            //width={150}\r\n                            />\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[0].trait_type} </strong>: {nft.metaData.attributes[0].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[1].trait_type} </strong>: {nft.metaData.attributes[1].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[2].trait_type} </strong>: {nft.metaData.attributes[2].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[3].trait_type} </strong>: {nft.metaData.attributes[3].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[4].trait_type} </strong>: {nft.metaData.attributes[4].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[5].trait_type} </strong>: {nft.metaData.attributes[5].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[6].trait_type} </strong>: {nft.metaData.attributes[6].value} </Text>\r\n\r\n                          </VStack>\r\n\r\n                        );\r\n\r\n                      })\r\n                    )}\r\n                  </SimpleGrid>\r\n                </VStack>\r\n              ) : (null)} \r\n              </div>           \r\n    )\r\n}\r\n\r\nexport default OwnedNFTS\r\n\r\n","export default __webpack_public_path__ + \"static/media/yildiz_gif4.1471f602.gif\";","export default __webpack_public_path__ + \"static/media/paw.ad2b1d46.png\";","export default __webpack_public_path__ + \"static/media/texture.8c1c05ae.png\";","export default __webpack_public_path__ + \"static/media/strings.7776d503.PNG\";","export default __webpack_public_path__ + \"static/media/mintplus.07cb7176.png\";","export default __webpack_public_path__ + \"static/media/Yumurta.a13dec2a.png\";","export default __webpack_public_path__ + \"static/media/mintminus.cc93d9ac.png\";","import React, { useState, useEffect } from 'react'\r\nimport { Flex, VStack, Box, HStack, Text, Accordion, AccordionItem, AccordionButton, AccordionPanel, AccordionIcon, Image } from '@chakra-ui/react'\r\nimport cerceve1 from \"../assets/images/cerceve1.png\"\r\nimport nftGif from \"../assets/images/nftGif.gif\"\r\nimport sampleim1 from \"../assets/images/sample_im1.png\"\r\nimport sampleim2 from \"../assets/images/sample_im2.png\"\r\nimport sampleim3 from \"../assets/images/sample_im3.png\"\r\nimport sampleim4 from \"../assets/images/sample_im4.png\"\r\nfunction Roadmap() {\r\n\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(false);\r\n\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false)\r\n\r\n\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(true);\r\n        } else {\r\n            setButton(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <HStack w='100%' pt='5vh' pb='5vh' alignItems='center' spacing='100px' >\r\n            <VStack marginLeft={'15vw'} alignItems='auto' w='45vw' h='40vh' pt='2%' bgImage={cerceve1} backgroundSize={'100% 100%'} backgroundPosition={'center center'} backgroundRepeat='no-repeat'>\r\n                <Text mx='auto' fontWeight=\"semibold\" fontSize='4xl' color='#52392E'>\r\n                    Roadmap\r\n                </Text>\r\n                <Text paddingLeft={'10'} paddingRight={'10'} marginLeft={'10'} fontSize='xl' color='#52392E'>\r\n                    %25 Minted => We release a limited edition NFT airdropped to 5 lucky holders                    \r\n                </Text>\r\n                <Text paddingLeft={'10'} paddingRight={'10'} marginLeft={'10'} fontSize='xl' color='#52392E'>\r\n                    %50 Minted => We release a limited edition NFT airdropped to 5 lucky holders                    \r\n                </Text>\r\n                <Text paddingLeft={'10'} paddingRight={'10'} marginLeft={'10'} fontSize='xl' color='#52392E'>\r\n                    %75 Minted => We release a limited edition NFT airdropped to 5 lucky holders                    \r\n                </Text>\r\n                <Text paddingLeft={'10'} paddingRight={'10'} marginLeft={'10'} fontSize='xl' color='#52392E'>\r\n                    %100 Minted => We release a limited edition NFT airdropped to 5 lucky holders                    \r\n                </Text>\r\n            </VStack>\r\n            <Box w='25vw' h='58vh' pt='4vh'>\r\n                <Image w='30vw' h='50vh' src={sampleim1} />\r\n            </Box>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default Roadmap\r\n\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport { Box, Container, Text, Spacer, VStack, HStack, Button, Center, Flex, Image, SimpleGrid, Divider } from \"@chakra-ui/react\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nimport { useToast } from \"@chakra-ui/react\"\r\nimport { send } from 'emailjs-com';\r\nimport Navbar from \"./componenets/Navbar\";\r\nimport Footer from \"./componenets/Footer\"\r\nimport FAQ from \"./componenets/FAQ\"\r\nimport WeGiveBack from \"./componenets/WeGiveBack\"\r\nimport Artist from \"./componenets/Artist\"\r\nimport OwnedNFTS from \"./componenets/ownedNFTS\"\r\nimport Cover from \"./componenets/Cover\"\r\nimport nftGif from \"./assets/images/nftGif.gif\"\r\nimport yildizgif from \"./assets/images/yildiz_gif4.gif\"\r\nimport pawimage from \"./assets/images/paw.png\"\r\nimport textureimg from \"./assets/images/texture.png\"\r\nimport cerceve1 from \"./assets/images/cerceve1.png\"\r\nimport stringsimg from \"./assets/images/strings.PNG\"\r\nimport yumurta from \"./assets/images/Yumurta.png\"\r\nimport mintplus from \"./assets/images/mintplus.png\"\r\nimport mintminus from \"./assets/images/mintminus.png\"\r\nimport { ScrollTo } from \"react-scroll-to\";\r\n\r\nimport { initializeApp } from \"@firebase/app\";\r\nimport { getAnalytics } from \"@firebase/analytics\";\r\nimport Roadmap from \"./componenets/Roadmap\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [amount, setAmount] = useState(1);\r\n\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(false);\r\n\r\n  const [LoadingMostMinters, setLoadingMostMinters] = useState(false);\r\n\r\n  const [mintingOpen, setmintingOpen] = useState(false);\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyA_J0kX2L1t5pSrX082D67B9UYyPDKSmvo\",\r\n    authDomain: \"avaxfoxes-deneme.firebaseapp.com\",\r\n    projectId: \"avaxfoxes-deneme\",\r\n    storageBucket: \"avaxfoxes-deneme.appspot.com\",\r\n    messagingSenderId: \"982796810661\",\r\n    appId: \"1:982796810661:web:4c0b37281ed9b3446b104c\",\r\n    measurementId: \"G-KB4G6YE0CS\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  const app = initializeApp(firebaseConfig);\r\n  const analytics = getAnalytics(app);\r\n\r\n  const toast = useToast()\r\n  var triedConnect = false;\r\n\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false)\r\n  const [mostMinters, setmostMinters] = useState([]);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(true);\r\n    } else {\r\n      setButton(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n  var baseURI = \"\";\r\n\r\n  const claimNFTs = (_amount) => {\r\n    if (!mintingOpen) {\r\n      return\r\n    }\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Minting your Avax Fox...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(_amount)\r\n      .send({\r\n        //gasLimit: \"985000\",\r\n        to: \"0x9E073C3613cF70ebB666431f27cC2CD97b9F0ddB\", // Smart Contract Adress\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((1 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"You now own a AvaxFox.\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      getData();\r\n    } else {\r\n      if (!triedConnect) {\r\n        triedConnect = true;\r\n        dispatch(connect())\r\n      }\r\n    }\r\n  }, [blockchain.smartContract, blockchain.account]);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      {button ?\r\n        <div>\r\n        </div>\r\n\r\n\r\n        :\r\n\r\n\r\n        <div>\r\n\r\n          <Navbar />\r\n          <Flex w='100%' bg='#43403f' bgImage={textureimg} backgroundSize={'80% 100%'} backgroundPosition={'center center'} backgroundRepeat='no-repeat'>\r\n            <VStack w='100%' marginX={'0%'} minH='80vh' alignItems='left' theme=\"theme\" bgImage={stringsimg} backgroundSize={'80% 100%'} backgroundPosition={'center center'} backgroundRepeat='no-repeat'>\r\n\r\n              <HStack w='100%' pt='5vh' pb='5vh' alignItems='center' spacing='100px' >\r\n                <VStack marginLeft={'15vw'} alignItems='auto' w='35vw' h='40vh' pt='2%' py='5%' bgImage={cerceve1} backgroundSize={'100% 100%'} backgroundPosition={'center center'} backgroundRepeat='no-repeat'>\r\n                  <Text mt='10px' mx='auto' fontWeight=\"semibold\" fontSize='4xl' color='#52392E'>\r\n                    What is Sophia the Cat\r\n                  </Text>\r\n                  <Text paddingLeft={'10'} paddingRight={'10'} marginLeft={'10'} fontSize='xl' color='#52392E'>\r\n                    Sophia the Cat is an NFT collection of uniquely designed elegant kats.The combination of sketchy and edgy looks will give you a new aspect for\r\n                    NFT\r\n                  </Text>\r\n                </VStack>\r\n                <Box w='30vw' h='58vh' pb='20vh'>\r\n                  <Image w='30vw' h='58vh' src={nftGif} />\r\n                </Box>\r\n\r\n\r\n              </HStack>\r\n\r\n              <HStack pt='30' px='5vw' p='3vw' overflow='false' >\r\n                <Box\r\n                  ml='25%'\r\n                  w='50%'\r\n                  px='24'\r\n                  pt='30'\r\n                  pb='30'\r\n                  borderRadius='150'\r\n                >\r\n                  {Number(data.totalSupply) == 500 ? (\r\n                    <>\r\n                      <Text style={{ textAlign: \"center\" }} fontSize='4xl'>\r\n                        The sale has ended\r\n                      </Text>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Text fontSize='xl' color='#9a6e5d' style={{ textAlign: \"center\" }}>\r\n                        1 Cat costs 1 Avax.\r\n                      </Text>\r\n                      <Spacer />\r\n                      <Text color='#9a6e5d' style={{ textAlign: \"center\" }}>\r\n                        {feedback}\r\n                      </Text>\r\n\r\n                      <VStack spacing='10'>\r\n                        <Text color='#9a6e5d' style={{ textAlign: \"center\", fontSize: 45, fontWeight: \"bold\" }} >\r\n                          {data.totalSupply}/500 {\"Cats Minted\"}\r\n                        </Text>\r\n                        <HStack mt='5vh' spacing='10'>\r\n                          <Flex w='4vw' h='6vh' bgImage={mintminus} backgroundSize={'100% 100%'} backgroundPosition={'center center'} alignItems={'auto'} backgroundRepeat='no-repeat'>\r\n                            <Button\r\n                              w='4vw'\r\n                              h='6vh'\r\n                              position={'center center'}\r\n                              //backgroundImage={'./assets/images/paw.png'}\r\n                              bg={'transparent'}\r\n                              _hover={{ bg: \"transparent\" }}\r\n                              color='white'\r\n                              mx-auto\r\n                              onClick={() => {\r\n                                if (amount > 1) {\r\n                                  setAmount(amount - 1)\r\n                                }\r\n\r\n                              }}>\r\n\r\n\r\n                            </Button>\r\n                          </Flex>\r\n\r\n                          <Text color='#9a6e5d'>\r\n                            {amount}\r\n                          </Text>\r\n                          <Flex w='4vw' h='6vh' bgImage={mintplus} backgroundSize={'100% 100%'} backgroundPosition={'center center'} alignItems={'auto'} backgroundRepeat='no-repeat'>\r\n                            <Button\r\n                              w='4vw'\r\n                              h='6vh'\r\n                              position={'center center'}\r\n                              //backgroundImage={'./assets/images/paw.png'}\r\n                              bg={'transparent'}\r\n                              _hover={{ bg: \"transparent\" }}\r\n                              color='white'\r\n                              mx-auto\r\n                              onClick={() => {\r\n                                if (amount < 20) {\r\n                                  setAmount(amount + 1)\r\n                                }\r\n                              }}>\r\n\r\n\r\n                            </Button>\r\n                          </Flex>\r\n                        </HStack>\r\n\r\n                        <Flex w='16vw' h='20vh' bgImage={pawimage} backgroundSize={'14vw 24vh'} backgroundPosition={'center center'} alignItems={'auto'}>\r\n                          <Button\r\n                            w='20vw'\r\n                            h='20vh'\r\n                            position={'center center'}\r\n                            //backgroundImage={'./assets/images/paw.png'}\r\n                            bg={'transparent'}\r\n                            _hover={{ bg: \"transparent\" }}\r\n                            color='white'\r\n                            mx-auto\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              claimNFTs(amount);\r\n                            }}\r\n\r\n                          >\r\n                          </Button>\r\n                        </Flex>\r\n\r\n                      </VStack>\r\n\r\n                    </>\r\n                  )}\r\n\r\n                </Box>\r\n              </HStack>\r\n\r\n\r\n\r\n              <OwnedNFTS />\r\n              <Roadmap/>\r\n              <WeGiveBack/>\r\n              <Artist/>\r\n            </VStack>\r\n          </Flex>\r\n\r\n\r\n        </div>\r\n      }\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ChakraProvider resetCSS>  \r\n        <App />      \r\n      </ChakraProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}