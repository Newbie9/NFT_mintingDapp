{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","assets/images/website_logo.png","componenets/Navbar.js","assets/images/avalanche.png","assets/images/3.png","assets/images/11.png","assets/images/20.png","assets/images/24.png","componenets/Footer.js","assets/images/nftGif.gif","assets/images/background.png","assets/images/backgroundMobile.png","assets/images/rarity.png","assets/images/yildiz_gif.GIF","assets/images/confet.png","assets/images/paw.png","assets/images/leaderboardBackground.png","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","tokensOfUser","error","reward","dataReducer","console","log","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","walletOfOwner","getReflectionBalances","from","connectFailed","connect","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","enable","request","method","accounts","SmartContractObj","SmartContract","abi","on","updateAccount","location","reload","Navbar","useSelector","useState","button","setButton","useDispatch","toast","useToast","showButton","innerWidth","useEffect","description","status","duration","isClosable","addEventListener","w","h","spacing","pr","bg","href","src","Logo","ml","align","fontSize","fontWeight","px","py","borderRadius","_hover","as","FaTwitter","color","FaTelegramPlane","FaDiscord","boxShadow","onClick","e","preventDefault","leftIcon","MdAccountBalanceWallet","Footer","pl","AvalancheImage","p","App","feedback","amount","setAmount","NFTS","setNFTS","viewNFTs","setviewNFTs","LoadingNFTS","setLoadingNFTS","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","triedConnect","getAnalytics","i","nft","tokenURI","then","uri","fetch","replace","response","json","metaData","prevState","id","length","sort","b","catch","err","fetchMetatDataForNFTS","message","alignItems","minH","sx","position","yildizgif","marginLeft","theme","pt","pb","mt","mx","nftGif2","marginEnd","overflow","Number","style","textAlign","borderColor","variant","bgImage","pawimage","backgroundSize","backgroundPosition","bgGradient","columns","spacingX","spacingY","map","index","alt","image","boxSize","objectFit","pos","attributes","trait_type","value","rarity","flex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","resetCSS","document","getElementById"],"mappings":"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","file":"static/js/main.7167d206.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  totalSupply: 0,  \r\n  tokensOfUser: [],\r\n  error: false,\r\n  errorMsg: \"\",  \r\n  reward: 0,\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        name: action.payload.name,\r\n        totalSupply: action.payload.totalSupply,        \r\n        tokensOfUser: action.payload.tokensOfUser,\r\n        reward: action.payload.reward,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      console.log(\"check data failed\")\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  //console.log(\"success\")\r\n\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  //console.log(\"failed\")\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call();\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n\r\n      if (totalSupply<200){\r\n        totalSupply=totalSupply*1;\r\n      }\r\n      else{\r\n        totalSupply=totalSupply;\r\n      }\r\n      if (totalSupply>0){\r\n        totalSupply=totalSupply+144;\r\n      }\r\n      \r\n      let tokensOfUser = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.walletOfOwner(account)\r\n        .call();      \r\n      let reward = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.getReflectionBalances()\r\n        .call({from:store.getState().blockchain.account });\r\n      \r\n      //console.log(reward)\r\n      let temp = await dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n          totalSupply,          \r\n          tokensOfUser,\r\n          reward,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/AvaxFoxes.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        // Request account access if needed\r\n        await window.ethereum.enable();\r\n        console.log(\"connected\");        \r\n      } catch (error) {\r\n        console.error(error);\r\n      }      \r\n      try {\r\n        console.log(\"1\");\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        \r\n        //const NetworkData = await SmartContract.networks[networkId];\r\n        const chainId = await ethereum.request({ method: 'eth_chainId' });\r\n        //console.log(chainId);\r\n        if (chainId==\"0xa86a\") {       //0xa86a mainnetin chain id'si, 0xa869 fuji netin chain idsi\r\n          const SmartContractObj = new Web3EthContract(\r\n            //SmartContract.abi,\r\n            //NetworkData.address            \r\n            SmartContract.abi,\r\n            \"0x9E073C3613cF70ebB666431f27cC2CD97b9F0ddB\"\r\n          );\r\n          //console.log(SmartContractObj);\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });          \r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Avalanche.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/website_logo.d559e240.png\";","import React, {useState, useEffect}  from 'react'\r\nimport {Box, HStack, Image, Button, Spacer, Text} from '@chakra-ui/react'\r\nimport {\r\n    Menu,\r\n    MenuButton,\r\n    MenuList,\r\n    MenuItem,\r\n    MenuItemOption,\r\n    MenuGroup,\r\n    MenuOptionGroup,\r\n    MenuIcon,\r\n    MenuCommand,\r\n    MenuDivider,\r\n    IconButton\r\n  } from \"@chakra-ui/react\"\r\nimport { useToast } from \"@chakra-ui/react\"\r\nimport Logo from \"../assets/images/website_logo.png\"\r\nimport {FaTwitter, FaTelegramPlane, FaDiscord } from \"react-icons/fa\"\r\nimport {GiHamburgerMenu} from \"react-icons/gi\"\r\nimport {MdAccountBalanceWallet, MdConstruction} from \"react-icons/md\"\r\nimport {IoIosConstruct} from \"react-icons/io\"\r\nimport { Icon } from '@chakra-ui/icons';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    AlertTitle,\r\n    AlertDescription,\r\n    CloseButton\r\n  } from \"@chakra-ui/react\"\r\n\r\n\r\n\r\n\r\nfunction Navbar() {\r\n    const data = useSelector((state) => state.data);\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const toast = useToast()\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false)\r\n\r\n    const claimRewards = () => {    \r\n        if (data.reward <= 0) {\r\n          console.log(\"no rewards to claim\")\r\n          return;\r\n        }\r\n        console.log(\"claiming rewards\")\r\n        blockchain.smartContract.methods.claimRewards()\r\n            .send({from:blockchain.account })      \r\n          .then((receipt) => {\r\n            console.log(receipt);        \r\n            dispatch(fetchData(blockchain.account));\r\n          });\r\n      };\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n          setButton(true);\r\n        } else {\r\n          setButton(false);\r\n        }\r\n      };\r\n    \r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (blockchain.errorMsg == \"\"){}\r\n        else{\r\n            toast({\r\n                description: blockchain.errorMsg,\r\n                status: \"error\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n            })}\r\n        \r\n    }, [blockchain.errorMsg]);\r\n\r\n    useEffect(() => {\r\n        if (blockchain.account == null){}\r\n        else{\r\n            toast({\r\n                description: \"Connected Successfully\",\r\n                status: \"success\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n            })}\r\n        \r\n    }, [blockchain.account]);\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <div>\r\n            {button ? \r\n                <div></div>\r\n            : \r\n                <HStack\r\n                    w='100%'\r\n                    h='16vh'\r\n                    spacing='auto'\r\n                    pr='5vw'\r\n                    bg='#eadece'\r\n                >  \r\n                    <a href=\"https://avaxfoxes.com/\" >          \r\n                    <Image\r\n                        src={Logo}\r\n                        ml='33vw'               \r\n                        h='11vh'\r\n                        w= '33vw' \r\n                    />\r\n                    </a>\r\n                    \r\n                    <HStack >\r\n                        \r\n                        <Box\r\n                            align='center'\r\n                            w='4vw'\r\n                            fontSize='3xl'\r\n                            fontWeight='semibold'                            \r\n                            px='4'\r\n                            py='1'\r\n                            borderRadius='150'\r\n                            _hover={{bg: \"blackAlpha.400\"}}         \r\n                        >\r\n                            <a href='https://twitter.com/avax_foxes'>\r\n                                <Icon as={FaTwitter} color='#9a6e5d' />\r\n                            </a>\r\n                        </Box>\r\n                        <Box\r\n                            align='center'\r\n                            w='4vw'\r\n                            fontSize='3xl'\r\n                            fontWeight='semibold'\r\n                            px='4'\r\n                            py='1'\r\n                            borderRadius='150'\r\n                            _hover={{bg: \"blackAlpha.400\"}}         \r\n                        >\r\n                            <a href='https://t.me/avax_foxes'>\r\n                                <Icon as={FaTelegramPlane} color='#9a6e5d'/>\r\n                            </a>\r\n                        </Box>\r\n                        <Box\r\n                            align='center'\r\n                            w='4vw'\r\n                            fontSize='3xl'\r\n                            fontWeight='semibold'\r\n                            px='4'\r\n                            py='1'                            \r\n                            borderRadius='150'\r\n                            _hover={{bg: \"blackAlpha.400\"}}         \r\n                        >\r\n                            <a href='https://discord.gg/x2DqFMfV8Z'>\r\n                                <Icon as={FaDiscord} color='#9a6e5d'/>\r\n                            </a>\r\n                        </Box>\r\n                        {blockchain.account === \"\" ||   blockchain.smartContract === null ? (\r\n                        <Box ml='25vw'>\r\n                            <Button\r\n                                px='22'\r\n                                py='7'\r\n                                bg='transparent'\r\n                                borderRadius='150'\r\n                                boxShadow='5'\r\n                                color='#9a6e5d'\r\n                                //mx-auto\r\n                                //bgGradient={'linear(to-r, blackAlpha.600, transparent)'}\r\n                                //variant=\"outline\"\r\n                                _hover={{ bg: \"blackAlpha.400\" }}\r\n                                onClick={(e) => {\r\n                                e.preventDefault();\r\n                                dispatch(connect());\r\n                                //getData();\r\n                                }}\r\n                                leftIcon=  {<Icon as={MdAccountBalanceWallet} color='#9a6e5d' w={7} h={7}/>}\r\n                            >\r\n                                \r\n                                CONNECT\r\n                            </Button>   \r\n                        </Box>):(\r\n\r\n                            null\r\n                        \r\n\r\n                        )}          \r\n                    </HStack>\r\n                         \r\n                </HStack>\r\n                \r\n            }\r\n                       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export default __webpack_public_path__ + \"static/media/avalanche.7272e61c.png\";","export default __webpack_public_path__ + \"static/media/3.6d791345.png\";","export default __webpack_public_path__ + \"static/media/11.1159712f.png\";","export default __webpack_public_path__ + \"static/media/20.647602cd.png\";","export default __webpack_public_path__ + \"static/media/24.56aec98a.png\";","import React, { useState, useEffect } from 'react'\r\nimport AvalancheImage from '../assets/images/avalanche.png'\r\nimport { Box, HStack, VStack, Image, Button, Spacer, Text } from '@chakra-ui/react'\r\nimport { FaTwitter, FaTelegramPlane, FaDiscord } from \"react-icons/fa\"\r\nimport { GiHamburgerMenu } from \"react-icons/gi\"\r\nimport { MdAccountBalanceWallet } from \"react-icons/md\"\r\nimport { Icon } from '@chakra-ui/icons';\r\nimport team1 from \"../assets/images/3.png\"\r\nimport team2 from \"../assets/images/11.png\"\r\nimport team3 from \"../assets/images/20.png\"\r\nimport team4 from \"../assets/images/24.png\"\r\n\r\nfunction Footer() {\r\n    const [button, setButton] = useState(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(true);\r\n        } else {\r\n            setButton(false);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <HStack w='100%' bg='#eadece' h='20vh' pl='20vw' spacing='auto' pr='15vw'>\r\n                {button ? <Image h='5vh' src={AvalancheImage} /> : <Image h='7vh' src={AvalancheImage} />}\r\n\r\n                <HStack >\r\n                    <Box\r\n                        align='center'\r\n                        w='4vw'\r\n                        fontSize='3xl'\r\n                        fontWeight='semibold'\r\n                        p='3'\r\n                        borderRadius='xl'\r\n                        _hover={{ borderRadius: 'xl', fontSize: '4xl' }}\r\n                    >\r\n                        <a href='https://twitter.com/avax_foxes'>\r\n                            <Icon h={button ? 5 : 8} as={FaTwitter} color='#9a6e5d' />\r\n                        </a>\r\n                    </Box>\r\n                    <Box\r\n                        align='center'\r\n                        w='4vw'\r\n                        fontSize='3xl'\r\n                        fontWeight='semibold'\r\n                        p='3'\r\n                        borderRadius='xl'\r\n                        _hover={{ borderRadius: 'xl', fontSize: '4xl' }}\r\n                    >\r\n                        <a href='https://t.me/avax_foxes'>\r\n                            <Icon h={button ? 5 : 8} as={FaTelegramPlane} color='#9a6e5d' />\r\n                        </a>\r\n                    </Box>\r\n                    <Box\r\n                        align='center'\r\n                        w='4vw'\r\n                        fontSize='3xl'\r\n                        fontWeight='semibold'\r\n                        p='3'\r\n                        borderRadius='xl'\r\n                        _hover={{ borderRadius: 'xl', fontSize: '4xl' }}\r\n                    >\r\n                        <a href='https://discord.gg/x2DqFMfV8Z'>\r\n                            <Icon h={button ? 5 : 8} as={FaDiscord} color='#9a6e5d' />\r\n                        </a>\r\n                    </Box>\r\n                </HStack>\r\n            </HStack>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/nftGif.2f921a05.gif\";","export default __webpack_public_path__ + \"static/media/background.86bc8187.png\";","export default __webpack_public_path__ + \"static/media/backgroundMobile.fb28cb17.png\";","export default __webpack_public_path__ + \"static/media/rarity.8462b33a.png\";","export default __webpack_public_path__ + \"static/media/yildiz_gif.4d72ac4e.GIF\";","export default __webpack_public_path__ + \"static/media/confet.0dbd08ba.png\";","export default __webpack_public_path__ + \"static/media/paw.fbae2d88.png\";","export default __webpack_public_path__ + \"static/media/leaderboardBackground.cc10c33b.png\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport { Box, Container, Text, Spacer, VStack, HStack, Button, Center, Flex, Image, SimpleGrid, Accordion, AccordionItem, AccordionButton, AccordionPanel, AccordionIcon, Divider } from \"@chakra-ui/react\";\r\nimport Countdown from \"react-countdown\";\r\nimport { Input, InputGroup, InputRightElement , IconButton} from \"@chakra-ui/react\"\r\nimport { useToast } from \"@chakra-ui/react\"\r\nimport { send } from 'emailjs-com';\r\nimport Navbar from \"./componenets/Navbar\";\r\nimport Footer from \"./componenets/Footer\"\r\nimport bgim from \"./assets/images/background.png\"\r\nimport bgMobile from \"./assets/images/backgroundMobile.png\"\r\nimport nftGif from \"./assets/images/nftGif.gif\"\r\nimport nftGif2 from \"./assets/images/nftGif.gif\"\r\nimport rarity from \"./assets/images/rarity.png\"\r\nimport confet from \"./assets/images/confet.png\"\r\nimport yildizgif from \"./assets/images/yildiz_gif.GIF\"\r\nimport pawimage from \"./assets/images/paw.png\"\r\nimport leaderboardbackground from \"./assets/images/leaderboardBackground.png\"\r\nimport { IoPawSharp } from 'react-icons/io5';\r\nimport { ImageBackground } from 'react';\r\n\r\n\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n} from \"@chakra-ui/react\"\r\nimport { Skeleton, SkeletonCircle, SkeletonText } from \"@chakra-ui/react\"\r\nimport { ScrollTo } from \"react-scroll-to\";\r\n\r\nimport { initializeApp } from \"@firebase/app\";\r\nimport { getAnalytics } from \"@firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [amount, setAmount] = useState(1);\r\n  const [NFTS, setNFTS] = useState([]);\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(false);\r\n  const [viewNFTs, setviewNFTs] = useState(false);\r\n  const [LoadingMostMinters, setLoadingMostMinters] = useState(false);\r\n  const [LoadingNFTS, setLoadingNFTS] = useState(true);\r\n  const [mintingOpen, setmintingOpen] = useState(false);\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyA_J0kX2L1t5pSrX082D67B9UYyPDKSmvo\",\r\n    authDomain: \"avaxfoxes-deneme.firebaseapp.com\",\r\n    projectId: \"avaxfoxes-deneme\",\r\n    storageBucket: \"avaxfoxes-deneme.appspot.com\",\r\n    messagingSenderId: \"982796810661\",\r\n    appId: \"1:982796810661:web:4c0b37281ed9b3446b104c\",\r\n    measurementId: \"G-KB4G6YE0CS\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  const app = initializeApp(firebaseConfig);\r\n  const analytics = getAnalytics(app);\r\n\r\n  const toast = useToast()\r\n  var triedConnect = false;\r\n\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false)\r\n  const [mostMinters, setmostMinters] = useState([]);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(true);\r\n    } else {\r\n      setButton(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n  var baseURI = \"\";\r\n\r\n  const claimNFTs = (_amount) => {\r\n    if (!mintingOpen) {\r\n      return\r\n    }\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Minting your Avax Fox...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(_amount)\r\n      .send({\r\n        //gasLimit: \"985000\",\r\n        to: \"0x9E073C3613cF70ebB666431f27cC2CD97b9F0ddB\", // Smart Contract Adress\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((1 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"You now own a AvaxFox.\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n\r\n  const fetchMetatDataForNFTS = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null && LoadingNFTS) {\r\n      setNFTS([]);\r\n      //blockchain.smartContract.methods.mintsOfOwner(blockchain.account).call().then(console.log)\r\n      //blockchain.smartContract.methods.getMostMinters().call().then(console.log)\r\n\r\n      for (let i = 0; i < data.tokensOfUser.length; i++) {\r\n        let nft = data.tokensOfUser[i];\r\n        blockchain.smartContract.methods.tokenURI(nft).call()\r\n          .then((uri) => fetch(uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")))\r\n          .then((response) => response.json())\r\n          .then((metaData) => {\r\n            setNFTS((prevState) => [\r\n              ...prevState,\r\n              { id: nft, metaData: metaData },\r\n            ]);\r\n          }).then(function () {\r\n            if (i == data.tokensOfUser.length - 1) {\r\n              setLoadingNFTS(false)\r\n              setNFTS((prevState) =>\r\n                prevState.sort((a, b) => a.id < b.id ? 1 : -1)\r\n              )\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      getData();\r\n    } else {\r\n      if (!triedConnect) {\r\n        triedConnect = true;\r\n        dispatch(connect())\r\n      }\r\n    }\r\n  }, [blockchain.smartContract, blockchain.account]);\r\n\r\n  useEffect(() => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      fetchMetatDataForNFTS();\r\n     \r\n    }\r\n  }, [data]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Check the input length\r\n    if (toSend.message.length == 42) {\r\n      send(\r\n        'service_dqosgoe',\r\n        'template_j4vt0tg',\r\n        toSend,\r\n        'user_ceMd9PTtIQhQoxDrmHokL'\r\n      )\r\n        .then((response) => {\r\n          setToSend({ message: \"\" });\r\n          toast({\r\n            description: \"You joined the giveaway successfully.\",\r\n            status: \"success\",\r\n            duration: 9000,\r\n            isClosable: true,\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          setToSend({ message: \"\" });\r\n          toast({\r\n            description: \"You joined the giveaway successfully.\",\r\n            status: \"success\",\r\n            duration: 9000,\r\n            isClosable: true,\r\n          })\r\n        });\r\n    }\r\n    else {\r\n      console.log('FAILED, This is not a valid wallet address');\r\n      toast({\r\n        description: \"This is not a valid wallet address\",\r\n        status: \"warning\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n    }\r\n  };\r\n\r\n\r\n  const [toSend, setToSend] = useState({\r\n    message: '',\r\n  });\r\n  const handleChange = (e) => {\r\n    setToSend({ ...toSend, [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {button ?\r\n        <div>\r\n        </div>\r\n\r\n\r\n        :\r\n\r\n\r\n        <div>\r\n          <HStack w='100%'  alignItems='top' minH='80vh' >\r\n            <Box w='10%' h='100vh'  bg='#eadece' sx={{ position: '-webkit-sticky', /* Safari */ position: 'sticky', top: '0', }}>\r\n              <Image  src={yildizgif} w='10vw' h='100vh' />\r\n            </Box>\r\n            <VStack w='80%' marginLeft={'0px'} minH='80vh' alignItems='left' theme=\"theme\" >\r\n\r\n              <VStack bg='gray.200' pl='15vw' pr='20vw' pt='5vh' pb='5vh' >\r\n                <VStack pb='10vh' w='40vw' p='10' borderRadius='150'>\r\n                  <Text mt='30' mx='auto' fontWeight=\"semibold\" fontSize='2xl'>\r\n                    What is Avax Fox\r\n                  </Text>\r\n                  <Text mx='auto' fontSize='xl'>\r\n                    Avax Foxes is a collection of randomly generated 1000 NFTs on the Avalanche blockchain with over 200 unique traits.\r\n                    Minters of AvaxFoxes will receive 10% of minting fees.\r\n                    On our marketplace, holders will receive 5% of every sale and original minters of AvaxFoxes earn 2% royalties each time their AvaxFoxes is resold!\r\n                    Also there are some Treasure Hunter foxes around them to help you find the treasure you've been looking for.\r\n                  </Text>\r\n                </VStack>\r\n                <Spacer />\r\n                <Image h='50vh' src={nftGif2} marginEnd='300px'/>\r\n              </VStack>\r\n              <HStack pt='30' px='5vw' p='3vw' overflow='false' >\r\n                <Box\r\n                  ml='25%'\r\n                  w='50%'\r\n                  px='24'\r\n                  pt='30'\r\n                  pb='30'\r\n                  borderRadius='150'\r\n                >\r\n                  {Number(data.totalSupply) == 500 ? (\r\n                    <>\r\n                      <Text style={{ textAlign: \"center\" }} fontSize='4xl'>\r\n                        The sale has ended\r\n                      </Text>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Text fontSize='xl' style={{ textAlign: \"center\" }}>\r\n                        1 Cat costs 1 Avax.\r\n                      </Text>\r\n                      <Spacer />\r\n                      <Text style={{ textAlign: \"center\" }}>\r\n                        {feedback}\r\n                      </Text>\r\n\r\n                      <VStack spacing='10'>\r\n                        <Text style={{ textAlign: \"center\", fontSize: 45, fontWeight: \"bold\" }} >\r\n                          {data.totalSupply}/500 {\"Cats Minted\"}\r\n                        </Text>\r\n                        <HStack mt='5vh' spacing='10'>\r\n                          <Button borderColor=\"red.500\"\r\n                            boxShadow='lg'\r\n                            borderRadius='150'\r\n                            variant=\"outline\"\r\n                            onClick={() => {\r\n                              if (amount > 1) {\r\n                                setAmount(amount - 1)\r\n                              }\r\n\r\n                            }}>\r\n                            -\r\n                          </Button>\r\n                          <Text>\r\n                            {amount}\r\n                          </Text>\r\n                          <Button\r\n                            borderColor='green'\r\n                            borderRadius='20'\r\n                            boxShadow='lg'\r\n                            variant=\"outline\"\r\n                            onClick={() => {\r\n                              if (amount < 20) {\r\n                                setAmount(amount + 1)\r\n                              }\r\n                            }}>\r\n                            +\r\n                          </Button>\r\n                        </HStack>\r\n                        <HStack > \r\n                                                       \r\n                            \r\n                            \r\n                            <Flex w='20vw' h='20vh' bgImage={pawimage} backgroundSize={'20vw 20vh'} backgroundPosition={'center center'} alignItems={'auto'}>\r\n                              <Button                                \r\n                                w='20vw'\r\n                                h='20vh'                              \r\n                                position={'center center'}                              \r\n                                //backgroundImage={'./assets/images/paw.png'}\r\n                                bg={'transparent'}\r\n                                _hover={{ bg: \"transparent\" }}\r\n                                color='white'\r\n                                mx-auto\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  setviewNFTs(true)\r\n                                }}\r\n\r\n                              >\r\n                               \r\n                              </Button>\r\n                              <Text position={'center center'} color='black' >MINT</Text>\r\n                            </Flex>\r\n                            \r\n                          \r\n                          {!viewNFTs && blockchain.account !== null ? (\r\n                            <Button\r\n                              px='35'\r\n                              py='7'\r\n                              borderRadius='200'\r\n                              boxShadow='5'\r\n                              borderRadius='200'\r\n                              bg='teal.400'\r\n                              mx-auto\r\n                              onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setviewNFTs(true)\r\n                              }}\r\n\r\n                            >\r\n                              Load My Foxes\r\n                            </Button>\r\n\r\n                          ) : (null)}\r\n\r\n                        </HStack>                        \r\n                      </VStack>\r\n\r\n                    </>\r\n                  )}\r\n\r\n                </Box>\r\n              </HStack>\r\n              {blockchain.account !== \"\" &&\r\n                blockchain.smartContract !== null && viewNFTs ? (\r\n                <VStack pt='30' bgGradient={'linear(to-b, transparent, blackAlpha.600)'} pb='5%' px='3vw' spacing='3%'>\r\n\r\n                  <Text style={{ textAlign: \"center\", fontSize: 35, fontWeight: \"bold\" }} >\r\n                    {\"Your Avax Foxes\"}\r\n                  </Text>\r\n                  {data.tokensOfUser.length == 0 ? (\r\n                    <Text style={{ textAlign: \"center\", fontSize: 25, fontWeight: \"bold\" }} >\r\n                      {\"You don't have any Avax Foxes\"}\r\n                    </Text>\r\n                  ) : (null)}\r\n                  <SimpleGrid columns={4} spacingX=\"40px\" spacingY=\"20px\">\r\n                    {data.loading ? (\r\n                      <>\r\n                        <Spacer />\r\n                        <Text style={{ textAlign: \"center\" }}>\r\n                          loading...\r\n                        </Text>\r\n                      </>\r\n                    ) : (\r\n                      NFTS.map((nft, index) => {\r\n\r\n                        return (\r\n\r\n                          <VStack align='center' key={index} w='20vw ' bg='whiteAlpha.600' py='2vh' px='1vw' borderRadius='xl' boxShadow='xl' spacing='3%'>\r\n                            <Text align='center' fontWeight='semiBold' fontSize='xl'> {nft.metaData.name} </Text>\r\n                            <Image\r\n                              alt={nft.metaData.name}\r\n                              src={nft.metaData.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")}\r\n                              boxSize=\"300px\"\r\n                              objectFit=\"cover\"\r\n                              pos={'center', 'center'}\r\n                            //width={150}\r\n                            />\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[0].trait_type} </strong>: {nft.metaData.attributes[0].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[1].trait_type} </strong>: {nft.metaData.attributes[1].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[2].trait_type} </strong>: {nft.metaData.attributes[2].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[3].trait_type} </strong>: {nft.metaData.attributes[3].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[4].trait_type} </strong>: {nft.metaData.attributes[4].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[5].trait_type} </strong>: {nft.metaData.attributes[5].value} </Text>\r\n                            <Text style={{ textAlign: \"center\" }}>  <strong>{nft.metaData.attributes[6].trait_type} </strong>: {nft.metaData.attributes[6].value} </Text>\r\n\r\n                          </VStack>\r\n\r\n                        );\r\n\r\n                      })\r\n                    )}\r\n                  </SimpleGrid>\r\n                </VStack>\r\n              ) : (null)}\r\n\r\n\r\n              <HStack pl='13vw' pr='10vw' py='5vh' bg='gray.200' w='100%' h='60%' spacing='auto'>\r\n                <VStack h='40vh' w='35vw' align='left' spacing='auto'>\r\n                  <Text fontSize='4xl' mx='auto'>\r\n                    Trait Rarity\r\n                  </Text>\r\n                  <Text fontSize='lg'>\r\n                    All of our foxes are unique and they are not equal. There is a rarity system between them. Some foxes have traits that are more rare than others.\r\n                  </Text>\r\n                  <Text fontSize='lg'>\r\n                    You can understand how rare your Avax Foxes are by their background color.\r\n                  </Text>\r\n                  <Text fontSize='lg'>\r\n                    There are 200+ total traits for Avax Foxes and these have been categorized into a tier based system. Traits are ranked from ‘common’ all the way through to ‘artifact’ and each rank has a corresponding % chance of being minted.\r\n                  </Text>\r\n                </VStack>\r\n                <Image h='50vh' src={rarity} />\r\n              </HStack>\r\n\r\n\r\n\r\n              <Flex bg='white'>\r\n                <VStack w='100%' px='3vw' py='5vw'>\r\n                  <Text pb='4vh' style={{ textAlign: \"center\", fontSize: 45, fontWeight: \"bold\" }} >\r\n                    {\"FAQ\"}\r\n                  </Text>\r\n                  <Accordion w='60vw' >\r\n                    <AccordionItem bg=\"gray.200\" borderRadius='xl'>\r\n                      <h2>\r\n                        <AccordionButton>\r\n                          <Box flex=\"1\" fontSize='xl' textAlign=\"center\">\r\n                            What are Treasure Hunters?\r\n                          </Box>\r\n                          <AccordionIcon />\r\n                        </AccordionButton>\r\n                      </h2>\r\n                      <AccordionPanel fontSize='md' pb={4} textAlign=\"center\">\r\n                        100 of the Avax Foxes will have the trait Treasure Hunter. People who mint them will receive 5 Avax.\r\n                      </AccordionPanel>\r\n                    </AccordionItem>\r\n                    <AccordionItem borderRadius='xl'>\r\n                      <h2>\r\n                        <AccordionButton>\r\n                          <Box flex=\"1\" fontSize='xl' textAlign=\"center\">\r\n                            What is the top minter leaderboard?\r\n                          </Box>\r\n                          <AccordionIcon />\r\n                        </AccordionButton>\r\n                      </h2>\r\n                      <AccordionPanel fontSize='md' pb={4} textAlign=\"center\">\r\n                        At the end of the minting phase, the account which has the highest minting points will receive the prize of 100 Avax.\r\n                        Treasure Hunters are equal to 10 minting points each and rest of the collection is equal to just 1 minting point.\r\n                      </AccordionPanel>\r\n                    </AccordionItem>\r\n                    <AccordionItem bg=\"gray.200\" borderRadius='xl'>\r\n                      <h2>\r\n                        <AccordionButton>\r\n                          <Box flex=\"1\" fontSize='xl' textAlign=\"center\">\r\n                            What is reflection?\r\n                          </Box>\r\n                          <AccordionIcon />\r\n                        </AccordionButton>\r\n                      </h2>\r\n                      <AccordionPanel fontSize='md' pb={4} textAlign=\"center\">\r\n                        For every minted Avax Fox %10 of minting price will be shared among minters.\r\n                        Also %5 of every sale in FoxMarket will be distributed among AvaxFoxes holders and original minters of AvaxFoxes earn 2% royalties each time their AvaxFoxes is resold!\r\n                      </AccordionPanel>\r\n                    </AccordionItem>\r\n\r\n                    <AccordionItem bg=\"white\" borderRadius='xl'>\r\n                      <h2>\r\n                        <AccordionButton>\r\n                          <Box flex=\"1\" fontSize='xl' textAlign=\"center\">\r\n                            Is there a limit on minting?\r\n                          </Box>\r\n                          <AccordionIcon />\r\n                        </AccordionButton>\r\n                      </h2>\r\n                      <AccordionPanel fontSize='md' pb={4} textAlign=\"center\">\r\n                        We will limit people to mint 20 Avax Fox per transaction. However, you can visit the minting section as many times as you like.\r\n                      </AccordionPanel>\r\n                    </AccordionItem>\r\n                    <AccordionItem bg=\"gray.200\" borderRadius='xl'>\r\n                      <h2>\r\n                        <AccordionButton>\r\n                          <Box flex=\"1\" fontSize='xl' textAlign=\"center\">\r\n                            Can I sell my Avax Fox?\r\n                          </Box>\r\n                          <AccordionIcon />\r\n                        </AccordionButton>\r\n                      </h2>\r\n                      <AccordionPanel fontSize='md' pb={4} textAlign=\"center\">\r\n                        Ofcourse all Avax Foxes are stored with ERC-721 contract. You can sell them in any marketplace that supports Avalanche and also our FoxMarket.\r\n                      </AccordionPanel>\r\n                    </AccordionItem>\r\n                  </Accordion>\r\n                </VStack>\r\n              </Flex>\r\n\r\n            </VStack>\r\n            <Box w='10%' h='100%'  bg='#eadece' sx={{ position: '-webkit-sticky', /* Safari */ position: 'sticky', top: '0', }}>\r\n              <Image  src={yildizgif} w='10vw' h='100vh' />\r\n            </Box>\r\n          </HStack>\r\n\r\n        </div>\r\n      }\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ChakraProvider resetCSS>  \r\n        <App />      \r\n      </ChakraProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}